import os
from datetime import datetime

print("=" * 80)
print("Parse log files generated by `simulation.py` extracting key information")
print("-" * 80)
print("Command: %s" % " ".join(sys.argv))
print("Run on host: %s" % os.uname().nodename)
print("Operating system: %s" % os.uname().sysname)
print("Machine: %s" % os.uname().machine)
print("Started at: %s" % datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
print("=" * 80)

# Input logs
log_dir = "stdout_sim"
logs = [l for l in os.listdir(log_dir) if "sim" in l]
logs.sort()

# Output directory and file
output_dir = "summary_tables"
if not os.path.exists(output_dir):
    os.makedirs(output_dir) 
output_fn = "parsed_logs.txt"
output_path = os.path.join(output_dir, output_fn)

print("Parsing...")
print("  Log directory: %s" % log_dir)
print("  No. logs: %d" len(logs))
print("  Output path: %s" % output_path
with open(output_path, "w") as parsed_logs:
    # Create Header
    parsed_logs.write("Logs Parsed On: ")
    parsed_logs.write(datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
    parsed_logs.write("\n")
    parsed_logs.write("No. of Logs: ")
    parsed_logs.write(str(len(logs)))
    parsed_logs.write("\n")
    parsed_logs.write("-" * 80)
    parsed_logs.write("\n")

    # Create Table Columns
    row_format = "{0[0]:<15}{0[1]:<20}{0[2]:<30}{0[3]:<30}{0[4]:<15}{0[5]:<20}"
    fields = ["Log Name", "Experiment Name", "Parameter Set", "Output Directory", "Completed?", "Time Elapsed"]
    parsed_logs.write(row_format.format(fields))
    parsed_logs.write("\n")

    for log in logs:
        # Define Fields
        expt_name = "Failed"
        output_dir = "Failed"
        param_set = "Failed"
        complete = "Failed"
        time_elapsed = "Failed"

        with open(os.path.join(log_dir, log), "r") as f:
            for line in f:
                if "Experiment Name:" in line:
                    expt_name = line.strip().split(": ")[1]
                elif "Parameter File:" in line:
                    param_set = line.strip().split(": ")[1]
                    param_set = param_set.split("/")[1]
                elif "Output Directory:" in line:
                    output_dir = line.strip().split(": ")[1]
                elif "Time elapsed:" in line:
                    time_elapsed = line.strip().split(": ")[1]
                elif "Simulation complete." in line:
                    complete = "True"
          elif "Human parasite population currently extinct!" in line:
              complete = "Extinct"
        # Write
        values = [log, expt_name, param_set, output_dir, complete, time_elapsed]
        parsed_logs.write(row_format.format(values))
        parsed_logs.write("\n")
print("Done.")
print("")
        
        
print("-" * 80)
print("Finished at: %s" % datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
print("=" * 80)
